@page "/mod/{modName}"
@using Microsoft.AspNetCore.Components
@using ModUlar.Components.Card
@using ModUlar.model
@using ModUlar.services

@code {
    [Parameter] public string modName { get; set; }
    [CascadingParameter] public Action<string> SetMainBackgroundStyle { get; set; }
    private Mod currentMod { get; set; }

    protected override void OnParametersSet()
    {
        currentMod = ModService.GetMods().FirstOrDefault(m => m.Name.Equals(modName, StringComparison.OrdinalIgnoreCase));
        SetMainBackgroundStyle?.Invoke(GetBackgroundStyle(currentMod.Background));
    }

    private string GetBackgroundStyle(string backgroundPath)
    {
        if (string.IsNullOrWhiteSpace(backgroundPath) || backgroundPath == "none")
            return "background: #fff;";

        return $"background: linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.6) ), url('{backgroundPath}'); background-size: cover; background-position: center;";
    }

}

@if (currentMod is null)
{
    <p>Mod no encontrado</p>
}
else
{
    <h1 style="font-family: 'Edo SZ', serif">@currentMod.Name</h1>
    <p>Autor: @currentMod.Author</p>
    <p>Versión: @currentMod.Version</p>
    <p>@currentMod.Description</p>
    <div class="settings-grid">
        @for (int i = 0; i < currentMod.Settings.Count; i++)
        {
            bool isLastOdd = currentMod.Settings.Count % 2 == 1 && i == currentMod.Settings.Count - 1;
            <div class="settings-grid-item @(isLastOdd ? "span-two" : "")">
                <SettingCard Setting="@currentMod.Settings[i]" ModFolder = "@currentMod.Folder"/>
            </div>
        }
    </div>
}
